object CheckCommand "fetch-elastic" {
  import "plugin-check-command"
  command = [ PluginDir + "/fetch_elastic" ]
  arguments = {
    "-c" = {
      value = "$elastic_hits_critical$"
      description = "Number or results for CRITICAL"
    }
    "-w" = {
      value = "$elastic_hits_warning$"
      description = "Number of results for WARNING"
    }
    "-I" = {
      value = "$elastic_cloudid$"
      description = "CloudID"
    }
    "-a" = {
      value = "$elastic_apitoken$"
      description = "API Token"
    }
    "-ca" = {
      value = "$elastic_cacert$"
      description = "CA Certificate File"
    }
    "-cf" = {
      value = "$elastic_counterfile$"
      description = "Counter file for persistent errors"
    }
    "-i" = {
      value = "$elastic_index$"
      description = "Elasticsearch Index (default \"index\")"
    }
    "-o" = {
      value = "$elastic_output_phrasing$"
      description = "Custom phrasing for output (default \"hits for elastic search.\")"
    }
    "-p" = {
      value = "$elastic_password$"
      description = "Password"
    }
    "-q" = {
      value = "$elastic_query_json$"
      description = "JSON file holding the query"
      required = true
    }
    "-u" = {
      value = "$elastic_username$"
      description = "Username"
    }
    "hosts" = {
      skip_key = true
      value = "$elastic_hosts$"
      description = "Elasticsearch hosts in format http://hostname1:9200 http://hostname2:9200 ..."
      order = 12
    }
  }
}

object EventCommand "fetch-elastic-clear" {
  command = [ PluginDir + "/bhmodules/fetch_elastic" ]
  arguments = {
    "-e" = {
      set_if = true
      description = "Run as event handler to remove counter file"
    }
    "-cf" = {
      value = "$elastic_counterfile$"
      description = "Counter file for persistent errors"  
    }
    "-s" = {
      value = "$service.state_id$"
      description = "Current status according to Icinga. Remove counter file if 'event' and 'OK'"
    }
  }
}